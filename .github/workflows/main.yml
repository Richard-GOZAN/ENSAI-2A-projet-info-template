name: pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgre_user
          POSTGRES_PASSWORD: postgre_pwd
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Path
      run: |
        PWD=$(pwd)
        export PYTHONPATH=$PWD/src
        echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pylint
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "HOST_WEBSERVICE=https://pokeapi.co/api/v2" > .env
        echo "POSTGRES_HOST=localhost" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "POSTGRES_DATABASE=test_db" >> .env
        echo "POSTGRES_USER=postgre_user" >> .env
        echo "POSTGRES_PASSWORD=postgre_pwd" >> .env
        echo "POSTGRES_SCHEMA=projet" >> .env

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgre_user -d test_db; do
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    - name: Unit Tests with pytest
      run: |
        coverage run -m pytest
        coverage report

    - name: Analysing the code with pylint
      run: |
        pylint --output-format=colorized --disable=C0114,C0415,W0718 $(git ls-files '*.py') --fail-under=7.5